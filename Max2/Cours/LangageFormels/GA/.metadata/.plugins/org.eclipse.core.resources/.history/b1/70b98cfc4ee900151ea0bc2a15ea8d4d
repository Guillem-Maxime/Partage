
public class BruteFor {
	//ATTRIBUTES
	private Map map;
	private int nbrTowns;
	
	//METHODS
	public BruteFor(Map m, int nT){
		this.map = m;
		this.nbrTowns = nT;
	}
	
	public Map getMap(){
		return(this.map);
	}
	
	public int getNbrTowns(){
		return(this.nbrTowns);
	}
	
	public int bruteForce(){
		
		int[] voidPath = new int[this.nbrTowns];
		
		for(int i = 0; i < this.nbrTowns; i ++){
			voidPath[i] = 1;
		}
		
		Travel travel = new Travel(this.nbrTowns, voidPath);
		
		int result = changeTravel(travel, 0);
		
		System.out.println("Le resultat trouvÃ© par BruteForce est : " + result);
		
		return result;
	}
	
	
	public int changeTravel(Travel t, int index){
		
		int result = t.calculLength(this.map); 
		int tempResult;
		
		if(index < t.getNbrTowns() - 1){
			for(int i = 1; i <= this.nbrTowns; i ++){
				if(!t.check(i)){
					t.setInt(i, index);
					tempResult = changeTravel(t, index + 1);
					
					if(tempResult < result){
						result = tempResult;
					}
				}
			}
		}
		
		return result;
	}

}
