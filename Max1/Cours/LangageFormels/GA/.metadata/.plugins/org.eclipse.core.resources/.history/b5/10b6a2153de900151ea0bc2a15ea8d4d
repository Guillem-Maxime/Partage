
public class Travel {
	//ATTRIBUTES
	
	private int nbrTowns;
	private int[] path;
	
	//METHODES
	public Travel(int nT, int[] p){
		this.nbrTowns = nT;
		this.path = p;
	}
	
	public int getNbrTowns(){
		return(this.nbrTowns);
	}
	
	public int[] getPath(){
		return(this.path);
	}
	
	public int getElement(int index){
		return(this.path[index]);
	}
	
	public int calculLength(Map map){
		
		int length = 0;
		
		for(int i = 0; i < this.nbrTowns - 1; i++){
			
			length += map.getRoads()[i][i+1]; 
		}
		
		length += map.getRoads()[this.nbrTowns - 1][0]; //on boucle le chemin
		
		return length;
	}
	
	public boolean check(int e){
		for(int i = 0; i < this.nbrTowns; i++){
			if(this.path[i] == e){
				return true;
			}
		}
		
		return false;
	}
	
	public int indexOf(int e){
		for(int i = 0; i < this.nbrTowns; i++){
			if(this.path[i] == e){
				return i;
			}
		}
		
		System.out.println("error : value not found, return -1");
		return -1;
		
	}
	
	public void setInt(int e, int index){
		this.path[index] = e;
	}
	
	public void reverse(int a, int b){
		if(a < b){
			for(int i = 0; i < (b + a)/2 - a; i++){
				this.path[a + i] = this.path[b - i];
			}
		}else{
			for(int i = 0; i < (b + a)/2 - b; i++){
				this.path[b + i] = this.path[a - i];
			}
		}
	}
}
